package count

import (
	"chao/lun"
	"math/rand"
	"time"
)

func Base( ag *lun.AutoGenerated) ([][]int) {

	Display := [][]int{}
	//var n0,n1 int
	//MathLine := [][]int{}
	StartStation := 0
	LunNum := make([]int, 0)
	for _, j := range ag.Gears.Pt96.Base {
		rand.Seed(time.Now().UnixNano())
		RandNum := rand.Intn(len(j))	//在每个数组里随机取一个下标
		if RandNum == len(j)-1 {	//随机到最后一个位置取最后一个和第一个和第二个
			LunNum = []int{
				j[RandNum],
				j[StartStation],
				j[StartStation+1],
			}
		} else if RandNum == len(j)-2 {	//随机到倒数第二个位置取倒数第二和倒数一和第一个
			LunNum = []int{
				j[RandNum],
				j[RandNum+1],
				j[StartStation],
			}
		} else {	//取数组里连续的三个数
			LunNum = []int{
				j[RandNum],
				j[RandNum+1],
				j[RandNum+2],
			}
		}
		Display = append(Display, LunNum)
	}
	return Display
}