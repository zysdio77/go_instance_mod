package handlelogic

import (
	"nightclub/readconf"
)

func (ag *AutoGenerated)FreeTrigger(gears [][]int,conf *readconf.ConfigFile,scattermap map[int]map[int]int) (int ,bool) {
	//fmt.Println("Hit111111111")
	count := 0
	freecount := 0
	scatter := ag.Scatter.Type[0]
	var hit bool
	for _,j := range gears{
		for _,jj := range  j{
			if jj == ag.Scatter.Type[0]{
				count++
			}
		}
	}
	if count >= conf.HitScatter{
		hit = true
		freecount = ag.Scatter.FreeTrigger[count-1]
		scattermap[count][scatter]++
	}
	return freecount,hit
}
func (ag *AutoGenerated)FreeRerigger(gears [][]int,conf *readconf.ConfigFile,scattermap map[int]map[int]int) (int ,bool) {
	count := 0
	freecount := 0
	var hit bool
	for _,j := range gears{
		for _,jj := range  j{
			if jj == ag.Scatter.Type[0]{
				count++
			}
		}
	}
	if count >= conf.HitScatter{
		hit = true
		scattermap[count][ag.Scatter.Type[0]]++
		freecount = ag.Scatter.FreeRerigger[count-1]
	}
	return freecount,hit
}
func (ag *AutoGenerated)FreeGames(freecount int,conf *readconf.ConfigFile,scattermap map[int]map[int]int,ScoreCfgMap map[int][]int,freeprizesummap map[int]map[int]int) (int ,int){
	freesum := 0
	for i:=0;i<freecount;i++{
		freegears := ag.FreeBase()
		count ,ok  :=ag.FreeRerigger(freegears,conf,scattermap)
		if ok {
			freecount = freecount+count
		}
		sum :=ag.FreeCalculateLine(freegears,ScoreCfgMap,conf,freeprizesummap)
		freesum = freesum + sum
	}

	return freecount , freesum
}